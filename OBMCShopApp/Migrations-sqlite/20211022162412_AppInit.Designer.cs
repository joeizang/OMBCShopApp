// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OBMCShopApp.Data;

namespace OBMCShopApp.Migrations
{
    [DbContext(typeof(OBMCShopAppContext))]
    [Migration("20211022162412_AppInit")]
    partial class AppInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OBMCShopApp.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(12,2)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<float>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int?>("SaleId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShelfId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("SupplyDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("UnitMeasure")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SaleId");

                    b.HasIndex("ShelfId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OBMCShopApp.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModeOfPayment")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("SaleDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SalesPerson")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeOfSale")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("OBMCShopApp.Models.Shelf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShelfDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShelfNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Shelves");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 5, DateTimeKind.Unspecified).AddTicks(1232), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "1",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 11, DateTimeKind.Unspecified).AddTicks(7819), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1344), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "2",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1373), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1388), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "3",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1394), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1400), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "4",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1405), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1411), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "5",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1416), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1422), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "6",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1427), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1433), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "7",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1438), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1444), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "8",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1449), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1456), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "9",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1460), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1467), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "10",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1471), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1478), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "11",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1483), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1489), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "12",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1494), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1500), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "13",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1505), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1510), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "14",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1515), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1523), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "15",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1528), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1534), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "16",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1539), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1545), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "17",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1550), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1556), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "18",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1560), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1566), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "19",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1571), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1577), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "20",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1582), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1587), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "21",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1592), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1602), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "22",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1607), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1613), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "23",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1618), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1623), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "24",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1628), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1634), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "25",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1640), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1645), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "26",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1650), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1656), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "27",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1661), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1667), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "28",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1672), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1678), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "29",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1683), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1689), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "30",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1693), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1700), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "31",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1704), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1710), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "32",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1715), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1721), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "33",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1725), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1834), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "34",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1840), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1847), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "35",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1852), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1858), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "36",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1863), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1869), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "37",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1874), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1880), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "38",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1884), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1890), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "39",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1895), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1901), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "40",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1906), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1912), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "41",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1917), new TimeSpan(0, 1, 0, 0, 0))
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1923), new TimeSpan(0, 1, 0, 0, 0)),
                            IsDeleted = false,
                            ShelfDescription = "Has the following products",
                            ShelfNumber = "42",
                            UpdatedAt = new DateTimeOffset(new DateTime(2021, 10, 22, 17, 24, 12, 12, DateTimeKind.Unspecified).AddTicks(1927), new TimeSpan(0, 1, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("OBMCShopApp.Models.ApplicationRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("ApplicationRole");
                });

            modelBuilder.Entity("OBMCShopApp.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OBMCShopApp.Models.Product", b =>
                {
                    b.HasOne("OBMCShopApp.Models.Sale", null)
                        .WithMany("ItemsSold")
                        .HasForeignKey("SaleId");

                    b.HasOne("OBMCShopApp.Models.Shelf", "ProductShelf")
                        .WithMany("Products")
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductShelf");
                });

            modelBuilder.Entity("OBMCShopApp.Models.Sale", b =>
                {
                    b.Navigation("ItemsSold");
                });

            modelBuilder.Entity("OBMCShopApp.Models.Shelf", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
